{"version":"2.1.0","runs":[{"invocations":[{"executionSuccessful":true,"toolExecutionNotifications":[{"descriptor":{"id":"Syntax error"},"level":"warning","message":{"text":"Syntax error at line service/ImageStoreService.java:38:\n `super` was unexpected"}},{"descriptor":{"id":"Syntax error"},"level":"warning","message":{"text":"Syntax error at line ui/list/ImageListActivity.java:106:\n `super` was unexpected"}},{"descriptor":{"id":"Syntax error"},"level":"warning","message":{"text":"Syntax error at line ui/login/LoginActivity.java:95:\n `super` was unexpected"}}]}],"results":[{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"FinstergramApplication.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":39,"endLine":43,"snippet":{"text":"        int random1 = (int) new Date().getTime();"},"startColumn":29,"startLine":43}}}],"message":{"text":"The application makes use of insecure random number generator."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-6"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"FinstergramApplication.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":32,"endLine":45,"snippet":{"text":"        int random2 = c.get(14);"},"startColumn":23,"startLine":45}}}],"message":{"text":"The application makes use of insecure random number generator."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-6"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"FinstergramApplication.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":70,"endLine":60,"snippet":{"text":"        SecretKeySpec secretKey = new SecretKeySpec(keyBytes, \"AES\");"},"startColumn":9,"startLine":60}}}],"message":{"text":"The application relies on symmetric cryptography with hardcoded keys as a sole method of encryption."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"service/ImageStoreService.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":75,"endLine":28,"snippet":{"text":"            Log.i(\"SERVICE\", \"Received Broadcast with command \" + command);"},"startColumn":13,"startLine":28}}}],"message":{"text":"Identified a potential SQL Injection vulnerability during intent handling."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.3"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"service/ImageStoreService.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":46,"endLine":130,"snippet":{"text":"        registerReceiver(this.commandReceiver, filter);"},"startColumn":26,"startLine":130}}}],"message":{"text":"The application does not unregister the broadcast receiver \"this.commandReceiver\" in the \"onStop()\" method of the activity."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"service/ImageStoreService.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":46,"endLine":131,"snippet":{"text":"        registerReceiver(this.commandReceiver, filterWithData);"},"startColumn":26,"startLine":131}}}],"message":{"text":"The application does not unregister the broadcast receiver \"this.commandReceiver\" in the \"onStop()\" method of the activity."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/FinstergramBaseActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":38,"snippet":{"text":"@Metadata(d1 = {\"\\u0000\\u001c\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0010\\b\\n\\u0002\\b\\u0005\\n\\u0002\\u0010\\u0002\\n\\u0002\\b\\u0003\\b&\\u0018\\u00002\\u00020\\u0001B\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\b\\u0010\\t\\u001a\\u00020\\nH\\u0014J\\u0010\\u0010\\u000b\\u001a\\u00020\\n2\\u0006\\u0010\\f\\u001a\\u00020\\u0004H&R\\u0011\\u0010\\u0003\\u001a\\u00020\\u0004¢\\u0006\\b\\n\\u0000\\u001a\\u0004\\b\\u0005\\u0010\\u0006R\\u0011\\u0010\\u0007\\u001a\\u00020\\u0004¢\\u0006\\b\\n\\u0000\\u001a\\u0004\\b\\b\\u0010\\u0006¨\\u0006\\r\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"Landroidx/appcompat/app/AppCompatActivity;\", \"()V\", \"dark\", \"\", \"getDark\", \"()I\", \"light\", \"getLight\", \"onResume\", \"\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes8.dex */\npublic abstract class FinstergramBaseActivity extends AppCompatActivity {\n    private final int dark = Color.parseColor(\"#68696b\");\n    private final int light = Color.parseColor(\"#ffffff\");\n\n    public abstract void setBackgroundColor(int color);\n\n    public final int getDark() {\n        return this.dark;\n    }\n\n    public final int getLight() {\n        return this.light;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, android.app.Activity\n    public void onResume() {\n        int backGroundColor;\n        super.onResume();\n        if (UserSettings.INSTANCE.getInstance().getDarkMode()) {\n            backGroundColor = this.dark;\n        } else {\n            backGroundColor = this.light;\n        }\n        setBackgroundColor(backGroundColor);\n    }\n}"},"startColumn":1,"startLine":10}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/detail/ImageDetailActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":54,"snippet":{"text":"@Metadata(d1 = {\"\\u00004\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0010\\u0002\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0010\\u000b\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0010\\b\\n\\u0000\\u0018\\u00002\\u00020\\u0001B\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\u0012\\u0010\\u0007\\u001a\\u00020\\b2\\b\\u0010\\t\\u001a\\u0004\\u0018\\u00010\\nH\\u0014J\\u0010\\u0010\\u000b\\u001a\\u00020\\f2\\u0006\\u0010\\r\\u001a\\u00020\\u000eH\\u0016J\\u0010\\u0010\\u000f\\u001a\\u00020\\b2\\u0006\\u0010\\u0010\\u001a\\u00020\\u0011H\\u0016R\\u0014\\u0010\\u0003\\u001a\\u00020\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0005\\u0010\\u0006¨\\u0006\\u0012\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/detail/ImageDetailActivity;\", \"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"()V\", \"imageView\", \"Landroid/widget/ImageView;\", \"getImageView\", \"()Landroid/widget/ImageView;\", \"onCreate\", \"\", \"savedInstanceState\", \"Landroid/os/Bundle;\", \"onOptionsItemSelected\", \"\", \"item\", \"Landroid/view/MenuItem;\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes5.dex */\npublic final class ImageDetailActivity extends FinstergramBaseActivity {\n    private final ImageView getImageView() {\n        View findViewById = findViewById(R.id.image);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.image)\");\n        return (ImageView) findViewById;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_image_detail);\n        ActionBar supportActionBar = getSupportActionBar();\n        Intrinsics.checkNotNull(supportActionBar);\n        supportActionBar.setDisplayHomeAsUpEnabled(true);\n        String imagePath = getIntent().getStringExtra(\"imagePath\");\n        Bitmap image = BitmapFactory.decodeFile(imagePath);\n        getImageView().setImageBitmap(image);\n    }\n\n    @Override // android.app.Activity\n    public boolean onOptionsItemSelected(MenuItem item) {\n        Intrinsics.checkNotNullParameter(item, \"item\");\n        if (item.getItemId() == 16908332) {\n            finish();\n            return true;\n        }\n        return super.onContextItemSelected(item);\n    }\n\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity\n    public void setBackgroundColor(int color) {\n        ((LinearLayout) findViewById(R.id.rootView)).setBackgroundColor(color);\n    }\n}"},"startColumn":1,"startLine":18}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/detail/ImageDetailActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":39,"endLine":20,"snippet":{"text":"public final class ImageDetailActivity extends FinstergramBaseActivity {"},"startColumn":20,"startLine":20}}}],"message":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/list/ImageListActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":215,"snippet":{"text":"@Metadata(d1 = {\"\\u0000^\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0010\\u0002\\n\\u0000\\n\\u0002\\u0010 \\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0010\\u000b\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0010\\b\\n\\u0000\\u0018\\u00002\\u00020\\u0001B\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\u0016\\u0010\\u0011\\u001a\\u00020\\u00122\\f\\u0010\\u0013\\u001a\\b\\u0012\\u0004\\u0012\\u00020\\u00150\\u0014H\\u0002J\\u0012\\u0010\\u0016\\u001a\\u00020\\u00122\\b\\u0010\\u0017\\u001a\\u0004\\u0018\\u00010\\u0018H\\u0014J\\u0010\\u0010\\u0019\\u001a\\u00020\\u001a2\\u0006\\u0010\\u001b\\u001a\\u00020\\u001cH\\u0016J\\u0010\\u0010\\u001d\\u001a\\u00020\\u001a2\\u0006\\u0010\\u001e\\u001a\\u00020\\u001fH\\u0016J\\b\\u0010 \\u001a\\u00020\\u0012H\\u0014J\\u0010\\u0010!\\u001a\\u00020\\u00122\\u0006\\u0010\\\"\\u001a\\u00020#H\\u0016R\\u0014\\u0010\\u0003\\u001a\\u00020\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0005\\u0010\\u0006R\\u0014\\u0010\\u0007\\u001a\\u00020\\b8BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\t\\u0010\\nR\\u0014\\u0010\\u000b\\u001a\\u00020\\f8BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\r\\u0010\\u000eR\\u000e\\u0010\\u000f\\u001a\\u00020\\u0010X\\u0082.¢\\u0006\\u0002\\n\\u0000¨\\u0006$\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/list/ImageListActivity;\", \"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"()V\", \"addButton\", \"Lcom/google/android/material/floatingactionbutton/FloatingActionButton;\", \"getAddButton\", \"()Lcom/google/android/material/floatingactionbutton/FloatingActionButton;\", \"listView\", \"Landroid/widget/ListView;\", \"getListView\", \"()Landroid/widget/ListView;\", \"noImagesMessage\", \"Landroid/widget/TextView;\", \"getNoImagesMessage\", \"()Landroid/widget/TextView;\", \"viewModel\", \"Lcom/netlight/sec/finstergram/ui/list/ImageListViewModel;\", \"createImageList\", \"\", \"itemList\", \"\", \"Lcom/netlight/sec/finstergram/ui/list/ListItem;\", \"onCreate\", \"savedInstanceState\", \"Landroid/os/Bundle;\", \"onCreateOptionsMenu\", \"\", \"menu\", \"Landroid/view/Menu;\", \"onOptionsItemSelected\", \"item\", \"Landroid/view/MenuItem;\", \"onResume\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes6.dex */\npublic final class ImageListActivity extends FinstergramBaseActivity {\n    private ImageListViewModel viewModel;\n\n    private final ListView getListView() {\n        View findViewById = findViewById(R.id.listView);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.listView)\");\n        return (ListView) findViewById;\n    }\n\n    private final TextView getNoImagesMessage() {\n        View findViewById = findViewById(R.id.noImages);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.noImages)\");\n        return (TextView) findViewById;\n    }\n\n    private final FloatingActionButton getAddButton() {\n        View findViewById = findViewById(R.id.fab);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.fab)\");\n        return (FloatingActionButton) findViewById;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_image_list);\n        this.viewModel = (ImageListViewModel) new ViewModelProvider(this).get(ImageListViewModel.class);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity, androidx.fragment.app.FragmentActivity, android.app.Activity\n    public void onResume() {\n        super.onResume();\n        getAddButton().setOnClickListener(new View.OnClickListener() { // from class: com.netlight.sec.finstergram.ui.list.ImageListActivity$$ExternalSyntheticLambda0\n            @Override // android.view.View.OnClickListener\n            public final void onClick(View view) {\n                ImageListActivity.onResume$lambda$0(ImageListActivity.this, view);\n            }\n        });\n        Iterable $this$map$iv = ImageStore.INSTANCE.loadImages(this);\n        Collection destination$iv$iv = new ArrayList(CollectionsKt.collectionSizeOrDefault($this$map$iv, 10));\n        for (Object item$iv$iv : $this$map$iv) {\n            Pair it = (Pair) item$iv$iv;\n            destination$iv$iv.add(new ListItem((Bitmap) it.getFirst(), (String) it.getSecond()));\n        }\n        List itemList = (List) destination$iv$iv;\n        createImageList(itemList);\n        invalidateOptionsMenu();\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onResume$lambda$0(ImageListActivity this$0, View it) {\n        Intrinsics.checkNotNullParameter(this$0, \"this$0\");\n        Intent intent = new Intent(this$0, (Class<?>) ImageImportActivity.class);\n        this$0.startActivity(intent);\n    }\n\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity\n    public void setBackgroundColor(int color) {\n        ((CoordinatorLayout) findViewById(R.id.coordinatorLayout)).setBackgroundColor(color);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public final void createImageList(final List<ListItem> itemList) {\n        getListView().setAdapter((android.widget.ListAdapter) new ListAdapter(this, itemList, new Function1<ListItem, Unit>() { // from class: com.netlight.sec.finstergram.ui.list.ImageListActivity$createImageList$1\n            /* JADX INFO: Access modifiers changed from: package-private */\n            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */\n            {\n                super(1);\n            }\n\n            @Override // kotlin.jvm.functions.Function1\n            public /* bridge */ /* synthetic */ Unit invoke(ListItem listItem) {\n                invoke2(listItem);\n                return Unit.INSTANCE;\n            }\n\n            /* renamed from: invoke, reason: avoid collision after fix types in other method */\n            public final void invoke2(ListItem itemToRemove) {\n                ImageListViewModel imageListViewModel;\n                Intrinsics.checkNotNullParameter(itemToRemove, \"itemToRemove\");\n                imageListViewModel = ImageListActivity.this.viewModel;\n                if (imageListViewModel == null) {\n                    Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n                    imageListViewModel = null;\n                }\n                imageListViewModel.deleteImage(itemToRemove.getFileName());\n                ImageListActivity imageListActivity = ImageListActivity.this;\n                Iterable $this$filter$iv = itemList;\n                Collection destination$iv$iv = new ArrayList();\n                for (Object element$iv$iv : $this$filter$iv) {\n                    ListItem it = (ListItem) element$iv$iv;\n                    if (it != itemToRemove) {\n                        destination$iv$iv.add(element$iv$iv);\n                    }\n                }\n                imageListActivity.createImageList((List) destination$iv$iv);\n            }\n        }, new Function1<ListItem, Unit>() { // from class: com.netlight.sec.finstergram.ui.list.ImageListActivity$createImageList$2\n            /* JADX INFO: Access modifiers changed from: package-private */\n            {\n                super(1);\n            }\n\n            @Override // kotlin.jvm.functions.Function1\n            public /* bridge */ /* synthetic */ Unit invoke(ListItem listItem) {\n                invoke2(listItem);\n                return Unit.INSTANCE;\n            }\n\n            /* renamed from: invoke, reason: avoid collision after fix types in other method */\n            public final void invoke2(ListItem itemToShare) {\n                Intrinsics.checkNotNullParameter(itemToShare, \"itemToShare\");\n                Uri imageUri = FileProvider.getUriForFile(ImageListActivity.this, \"com.netlight.sec.finstergram.imageprovider\", new File(itemToShare.getFileName()));\n                Intent shareIntent = new Intent(\"android.intent.action.SEND\");\n                shareIntent.setType(\"image/*\");\n                shareIntent.putExtra(\"android.intent.extra.STREAM\", imageUri);\n                ImageListActivity.this.startActivity(Intent.createChooser(shareIntent, \"Share Image\"));\n            }\n        }, new Function1<ListItem, Unit>() { // from class: com.netlight.sec.finstergram.ui.list.ImageListActivity$createImageList$3\n            /* JADX INFO: Access modifiers changed from: package-private */\n            {\n                super(1);\n            }\n\n            @Override // kotlin.jvm.functions.Function1\n            public /* bridge */ /* synthetic */ Unit invoke(ListItem listItem) {\n                invoke2(listItem);\n                return Unit.INSTANCE;\n            }\n\n            /* renamed from: invoke, reason: avoid collision after fix types in other method */\n            public final void invoke2(ListItem imageClicked) {\n                Intrinsics.checkNotNullParameter(imageClicked, \"imageClicked\");\n                Intent intent = new Intent(ImageListActivity.this, (Class<?>) ImageDetailActivity.class);\n                intent.putExtra(\"imagePath\", imageClicked.getFileName());\n                ImageListActivity.this.startActivity(intent);\n            }\n        }));\n        getNoImagesMessage().setVisibility(itemList.isEmpty() ^ true ? 8 : 0);\n    }\n\n    @Override // android.app.Activity\n    public boolean onCreateOptionsMenu(Menu menu) {\n        Intrinsics.checkNotNullParameter(menu, \"menu\");\n        getMenuInflater().inflate(R.menu.menu_list, menu);\n        if (!UserSettings.INSTANCE.getInstance().getRequirePassword()) {\n            menu.findItem(R.id.action_logout).setVisible(false);\n            return true;\n        }\n        return true;\n    }\n\n    @Override // android.app.Activity\n    public boolean onOptionsItemSelected(MenuItem item) {\n        Intrinsics.checkNotNullParameter(item, \"item\");\n        switch (item.getItemId()) {\n            case R.id.action_delete_account /* 2131230780 */:\n                ImageListViewModel imageListViewModel = this.viewModel;\n                if (imageListViewModel == null) {\n                    Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n                    imageListViewModel = null;\n                }\n                imageListViewModel.deleteAccount();\n                finish();\n                return true;\n            case R.id.action_logout /* 2131230783 */:\n                finish();\n                return true;\n            case R.id.action_settings /* 2131230789 */:\n                Intent intent = new Intent(this, (Class<?>) SettingsActivity.class);\n                startActivity(intent);\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n}"},"startColumn":1,"startLine":36}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/list/ImageListActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":37,"endLine":38,"snippet":{"text":"public final class ImageListActivity extends FinstergramBaseActivity {"},"startColumn":20,"startLine":38}}}],"message":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/login/LoginActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":234,"snippet":{"text":"@Metadata(d1 = {\"\\u0000H\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0004\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0005\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0005\\n\\u0002\\u0010\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0005\\n\\u0002\\u0010\\b\\n\\u0000\\u0018\\u00002\\u00020\\u0001B\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\b\\u0010\\u0016\\u001a\\u00020\\u0017H\\u0002J\\u0012\\u0010\\u0018\\u001a\\u00020\\u00172\\b\\u0010\\u0019\\u001a\\u0004\\u0018\\u00010\\u001aH\\u0014J\\u0012\\u0010\\u001b\\u001a\\u00020\\u00172\\b\\u0010\\u001c\\u001a\\u0004\\u0018\\u00010\\u001dH\\u0002J\\b\\u0010\\u001e\\u001a\\u00020\\u0017H\\u0014J\\u0012\\u0010\\u001f\\u001a\\u00020\\u00172\\b\\u0010\\u001c\\u001a\\u0004\\u0018\\u00010\\u001dH\\u0002J\\b\\u0010 \\u001a\\u00020\\u0017H\\u0014J\\u0010\\u0010!\\u001a\\u00020\\u00172\\u0006\\u0010\\\"\\u001a\\u00020#H\\u0016R\\u001c\\u0010\\u0003\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\u00040\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0006\\u0010\\u0007R\\u001c\\u0010\\b\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\t0\\t8BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\n\\u0010\\u000bR\\u001c\\u0010\\f\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\u00040\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\r\\u0010\\u0007R\\u000e\\u0010\\u000e\\u001a\\u00020\\u000fX\\u0082.¢\\u0006\\u0002\\n\\u0000R\\u001c\\u0010\\u0010\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\u00110\\u00118BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0012\\u0010\\u0013R\\u001c\\u0010\\u0014\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\u00110\\u00118BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0015\\u0010\\u0013¨\\u0006$\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/login/LoginActivity;\", \"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"()V\", \"passwordField\", \"Landroid/widget/EditText;\", \"kotlin.jvm.PlatformType\", \"getPasswordField\", \"()Landroid/widget/EditText;\", \"registerOrLoginButton\", \"Landroid/widget/Button;\", \"getRegisterOrLoginButton\", \"()Landroid/widget/Button;\", \"usernameField\", \"getUsernameField\", \"viewModel\", \"Lcom/netlight/sec/finstergram/ui/login/LoginViewModel;\", \"welcomeSubtitle\", \"Landroid/widget/TextView;\", \"getWelcomeSubtitle\", \"()Landroid/widget/TextView;\", \"welcomeTitle\", \"getWelcomeTitle\", \"navigateToImageList\", \"\", \"onCreate\", \"savedInstanceState\", \"Landroid/os/Bundle;\", \"onLoginButtonClick\", \"view\", \"Landroid/view/View;\", \"onPause\", \"onRegisterButtonClick\", \"onResume\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes3.dex */\npublic final class LoginActivity extends FinstergramBaseActivity {\n    private LoginViewModel viewModel;\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public final TextView getWelcomeTitle() {\n        return (TextView) findViewById(R.id.welcomeTitle);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public final TextView getWelcomeSubtitle() {\n        return (TextView) findViewById(R.id.welcomeSubtitle);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public final Button getRegisterOrLoginButton() {\n        return (Button) findViewById(R.id.buttonRegisterLogin);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public final EditText getUsernameField() {\n        return (EditText) findViewById(R.id.username);\n    }\n\n    private final EditText getPasswordField() {\n        return (EditText) findViewById(R.id.password);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n        Intent serviceIntent = new Intent(this, (Class<?>) ImageStoreService.class);\n        startService(serviceIntent);\n        this.viewModel = (LoginViewModel) new ViewModelProvider(this).get(LoginViewModel.class);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity, androidx.fragment.app.FragmentActivity, android.app.Activity\n    public void onResume() {\n        super.onResume();\n        LoginViewModel loginViewModel = this.viewModel;\n        LoginViewModel loginViewModel2 = null;\n        if (loginViewModel == null) {\n            Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n            loginViewModel = null;\n        }\n        loginViewModel.init();\n        LoginViewModel loginViewModel3 = this.viewModel;\n        if (loginViewModel3 == null) {\n            Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n            loginViewModel3 = null;\n        }\n        if (loginViewModel3.getRegisteredUser().getValue() != null && !UserSettings.INSTANCE.getInstance().getRequirePassword()) {\n            navigateToImageList();\n            return;\n        }\n        LoginViewModel loginViewModel4 = this.viewModel;\n        if (loginViewModel4 == null) {\n            Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n        } else {\n            loginViewModel2 = loginViewModel4;\n        }\n        final Function1<String, Unit> function1 = new Function1<String, Unit>() { // from class: com.netlight.sec.finstergram.ui.login.LoginActivity$onResume$1\n            /* JADX INFO: Access modifiers changed from: package-private */\n            {\n                super(1);\n            }\n\n            @Override // kotlin.jvm.functions.Function1\n            public /* bridge */ /* synthetic */ Unit invoke(String str) {\n                invoke2(str);\n                return Unit.INSTANCE;\n            }\n\n            /* renamed from: invoke, reason: avoid collision after fix types in other method */\n            public final void invoke2(String username) {\n                TextView welcomeTitle;\n                TextView welcomeSubtitle;\n                Button registerOrLoginButton;\n                EditText usernameField;\n                TextView welcomeTitle2;\n                TextView welcomeSubtitle2;\n                Button registerOrLoginButton2;\n                EditText usernameField2;\n                if (username != null) {\n                    welcomeTitle2 = LoginActivity.this.getWelcomeTitle();\n                    StringCompanionObject stringCompanionObject = StringCompanionObject.INSTANCE;\n                    String string = LoginActivity.this.getString(R.string.welcome_user);\n                    Intrinsics.checkNotNullExpressionValue(string, \"getString(R.string.welcome_user)\");\n                    String format = String.format(string, Arrays.copyOf(new Object[]{username}, 1));\n                    Intrinsics.checkNotNullExpressionValue(format, \"format(format, *args)\");\n                    welcomeTitle2.setText(format);\n                    welcomeSubtitle2 = LoginActivity.this.getWelcomeSubtitle();\n                    welcomeSubtitle2.setText(LoginActivity.this.getString(R.string.please_login));\n                    registerOrLoginButton2 = LoginActivity.this.getRegisterOrLoginButton();\n                    registerOrLoginButton2.setText(\"Login\");\n                    usernameField2 = LoginActivity.this.getUsernameField();\n                    usernameField2.setVisibility(8);\n                    return;\n                }\n                welcomeTitle = LoginActivity.this.getWelcomeTitle();\n                welcomeTitle.setText(LoginActivity.this.getString(R.string.welcome));\n                welcomeSubtitle = LoginActivity.this.getWelcomeSubtitle();\n                welcomeSubtitle.setText(LoginActivity.this.getString(R.string.welcome_subtitle));\n                registerOrLoginButton = LoginActivity.this.getRegisterOrLoginButton();\n                registerOrLoginButton.setText(\"Register\");\n                usernameField = LoginActivity.this.getUsernameField();\n                usernameField.setVisibility(0);\n            }\n        };\n        loginViewModel2.getRegisteredUser().observe(this, new Observer() { // from class: com.netlight.sec.finstergram.ui.login.LoginActivity$$ExternalSyntheticLambda0\n            @Override // androidx.lifecycle.Observer\n            public final void onChanged(Object obj) {\n                LoginActivity.onResume$lambda$0(Function1.this, obj);\n            }\n        });\n        getRegisterOrLoginButton().setOnClickListener(new View.OnClickListener() { // from class: com.netlight.sec.finstergram.ui.login.LoginActivity$$ExternalSyntheticLambda1\n            @Override // android.view.View.OnClickListener\n            public final void onClick(View view) {\n                LoginActivity.onResume$lambda$1(LoginActivity.this, view);\n            }\n        });\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onResume$lambda$0(Function1 tmp0, Object p0) {\n        Intrinsics.checkNotNullParameter(tmp0, \"$tmp0\");\n        tmp0.invoke(p0);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onResume$lambda$1(LoginActivity this$0, View it) {\n        Intrinsics.checkNotNullParameter(this$0, \"this$0\");\n        LoginViewModel loginViewModel = this$0.viewModel;\n        if (loginViewModel == null) {\n            Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n            loginViewModel = null;\n        }\n        if (loginViewModel.getRegisteredUser().getValue() != null) {\n            this$0.onLoginButtonClick(it);\n        } else {\n            this$0.onRegisterButtonClick(it);\n        }\n    }\n\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity\n    public void setBackgroundColor(int color) {\n        ((ConstraintLayout) findViewById(R.id.rootView)).setBackgroundColor(color);\n    }\n\n    private final void onLoginButtonClick(View view) {\n        LoginViewModel loginViewModel = this.viewModel;\n        if (loginViewModel == null) {\n            Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n            loginViewModel = null;\n        }\n        boolean authenticated = loginViewModel.authenticateUser(getPasswordField().getText().toString());\n        if (authenticated) {\n            navigateToImageList();\n        } else {\n            Intrinsics.checkNotNull(view);\n            Snackbar.make(view, \"Wrong credentials!\", -1).show();\n        }\n    }\n\n    private final void onRegisterButtonClick(View view) {\n        String userName = getUsernameField().getText().toString();\n        String password = getPasswordField().getText().toString();\n        if (!(userName.length() == 0)) {\n            if (!(password.length() == 0)) {\n                LoginViewModel loginViewModel = this.viewModel;\n                if (loginViewModel == null) {\n                    Intrinsics.throwUninitializedPropertyAccessException(\"viewModel\");\n                    loginViewModel = null;\n                }\n                boolean registrationSuccessful = loginViewModel.register(userName, password);\n                if (registrationSuccessful) {\n                    Intrinsics.checkNotNull(view);\n                    Snackbar.make(view, \"Registration successful\", -1).show();\n                    navigateToImageList();\n                    return;\n                } else {\n                    Intrinsics.checkNotNull(view);\n                    Snackbar.make(view, \"Registration failed!\", -1).show();\n                    return;\n                }\n            }\n        }\n        Intrinsics.checkNotNull(view);\n        Snackbar.make(view, \"Empty Username or Password is not allowed!\", -1).show();\n    }\n\n    private final void navigateToImageList() {\n        Intent intent = new Intent(this, (Class<?>) ImageListActivity.class);\n        startActivity(intent);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, android.app.Activity\n    public void onPause() {\n        super.onPause();\n        getUsernameField().setText((CharSequence) null);\n        getPasswordField().setText((CharSequence) null);\n    }\n}"},"startColumn":1,"startLine":27}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/login/LoginActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":33,"endLine":29,"snippet":{"text":"public final class LoginActivity extends FinstergramBaseActivity {"},"startColumn":20,"startLine":29}}}],"message":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/p000import/ImageImportActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":86,"snippet":{"text":"@Metadata(d1 = {\"\\u0000F\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0010\\u0002\\n\\u0000\\n\\u0002\\u0010\\b\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0010\\u000b\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0004\\u0018\\u0000 \\u001b2\\u00020\\u0001:\\u0001\\u001bB\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\\"\\u0010\\u000b\\u001a\\u00020\\f2\\u0006\\u0010\\r\\u001a\\u00020\\u000e2\\u0006\\u0010\\u000f\\u001a\\u00020\\u000e2\\b\\u0010\\u0010\\u001a\\u0004\\u0018\\u00010\\u0011H\\u0014J\\u0012\\u0010\\u0012\\u001a\\u00020\\f2\\b\\u0010\\u0013\\u001a\\u0004\\u0018\\u00010\\u0014H\\u0014J\\u0010\\u0010\\u0015\\u001a\\u00020\\u00162\\u0006\\u0010\\u0017\\u001a\\u00020\\u0018H\\u0016J\\u0010\\u0010\\u0019\\u001a\\u00020\\f2\\u0006\\u0010\\u001a\\u001a\\u00020\\u000eH\\u0016R\\u0014\\u0010\\u0003\\u001a\\u00020\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0005\\u0010\\u0006R\\u0014\\u0010\\u0007\\u001a\\u00020\\b8BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\t\\u0010\\n¨\\u0006\\u001c\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/import/ImageImportActivity;\", \"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"()V\", \"importButton\", \"Landroid/widget/Button;\", \"getImportButton\", \"()Landroid/widget/Button;\", \"rootView\", \"Landroid/widget/LinearLayout;\", \"getRootView\", \"()Landroid/widget/LinearLayout;\", \"onActivityResult\", \"\", \"requestCode\", \"\", \"resultCode\", \"data\", \"Landroid/content/Intent;\", \"onCreate\", \"savedInstanceState\", \"Landroid/os/Bundle;\", \"onOptionsItemSelected\", \"\", \"item\", \"Landroid/view/MenuItem;\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"Companion\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes9.dex */\npublic final class ImageImportActivity extends FinstergramBaseActivity {\n    public static final int PICK_IMAGE_REQUEST_CODE = 1337;\n\n    private final LinearLayout getRootView() {\n        View findViewById = findViewById(R.id.rootView);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.rootView)\");\n        return (LinearLayout) findViewById;\n    }\n\n    private final Button getImportButton() {\n        View findViewById = findViewById(R.id.importButton);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.importButton)\");\n        return (Button) findViewById;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_image_import);\n        ActionBar supportActionBar = getSupportActionBar();\n        Intrinsics.checkNotNull(supportActionBar);\n        supportActionBar.setDisplayHomeAsUpEnabled(true);\n        getImportButton().setOnClickListener(new View.OnClickListener() { // from class: com.netlight.sec.finstergram.ui.import.ImageImportActivity$$ExternalSyntheticLambda0\n            @Override // android.view.View.OnClickListener\n            public final void onClick(View view) {\n                ImageImportActivity.onCreate$lambda$0(ImageImportActivity.this, view);\n            }\n        });\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onCreate$lambda$0(ImageImportActivity this$0, View it) {\n        Intrinsics.checkNotNullParameter(this$0, \"this$0\");\n        Intent intent = new Intent(\"android.intent.action.GET_CONTENT\");\n        intent.setType(\"image/*\");\n        this$0.startActivityForResult(intent, PICK_IMAGE_REQUEST_CODE);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, android.app.Activity\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        Uri imageUri;\n        super.onActivityResult(requestCode, resultCode, data);\n        if (requestCode == 1337 && resultCode == -1 && data != null && (imageUri = data.getData()) != null) {\n            ImageStore.INSTANCE.storeImage(this, imageUri);\n            Snackbar.make(getRootView(), \"Image imported!\", -1).show();\n        }\n    }\n\n    @Override // android.app.Activity\n    public boolean onOptionsItemSelected(MenuItem item) {\n        Intrinsics.checkNotNullParameter(item, \"item\");\n        if (item.getItemId() == 16908332) {\n            finish();\n            return true;\n        }\n        return super.onContextItemSelected(item);\n    }\n\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity\n    public void setBackgroundColor(int color) {\n        getRootView().setBackgroundColor(color);\n    }\n}"},"startColumn":1,"startLine":20}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/p000import/ImageImportActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":39,"endLine":22,"snippet":{"text":"public final class ImageImportActivity extends FinstergramBaseActivity {"},"startColumn":20,"startLine":22}}}],"message":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/settings/SettingsActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":85,"snippet":{"text":"@Metadata(d1 = {\"\\u00004\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0005\\n\\u0002\\u0010\\u0002\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0010\\u000b\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0010\\b\\n\\u0000\\u0018\\u00002\\u00020\\u0001B\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\u0012\\u0010\\t\\u001a\\u00020\\n2\\b\\u0010\\u000b\\u001a\\u0004\\u0018\\u00010\\fH\\u0014J\\u0010\\u0010\\r\\u001a\\u00020\\u000e2\\u0006\\u0010\\u000f\\u001a\\u00020\\u0010H\\u0016J\\u0010\\u0010\\u0011\\u001a\\u00020\\n2\\u0006\\u0010\\u0012\\u001a\\u00020\\u0013H\\u0016R\\u0014\\u0010\\u0003\\u001a\\u00020\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0005\\u0010\\u0006R\\u0014\\u0010\\u0007\\u001a\\u00020\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\b\\u0010\\u0006¨\\u0006\\u0014\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/settings/SettingsActivity;\", \"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"()V\", \"darkModeSwitch\", \"Landroidx/appcompat/widget/SwitchCompat;\", \"getDarkModeSwitch\", \"()Landroidx/appcompat/widget/SwitchCompat;\", \"passwordRequiredSwitch\", \"getPasswordRequiredSwitch\", \"onCreate\", \"\", \"savedInstanceState\", \"Landroid/os/Bundle;\", \"onOptionsItemSelected\", \"\", \"item\", \"Landroid/view/MenuItem;\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes8.dex */\npublic final class SettingsActivity extends FinstergramBaseActivity {\n    private final SwitchCompat getDarkModeSwitch() {\n        View findViewById = findViewById(R.id.darkModeSwitch);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.darkModeSwitch)\");\n        return (SwitchCompat) findViewById;\n    }\n\n    private final SwitchCompat getPasswordRequiredSwitch() {\n        View findViewById = findViewById(R.id.passwordRequiredSwitch);\n        Intrinsics.checkNotNullExpressionValue(findViewById, \"findViewById(R.id.passwordRequiredSwitch)\");\n        return (SwitchCompat) findViewById;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_settings);\n        ActionBar supportActionBar = getSupportActionBar();\n        Intrinsics.checkNotNull(supportActionBar);\n        supportActionBar.setDisplayHomeAsUpEnabled(true);\n        UserSettings settings = UserSettings.INSTANCE.getInstance();\n        getDarkModeSwitch().setChecked(settings.getDarkMode());\n        getPasswordRequiredSwitch().setChecked(settings.getRequirePassword());\n        getDarkModeSwitch().setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { // from class: com.netlight.sec.finstergram.ui.settings.SettingsActivity$$ExternalSyntheticLambda0\n            @Override // android.widget.CompoundButton.OnCheckedChangeListener\n            public final void onCheckedChanged(CompoundButton compoundButton, boolean z) {\n                SettingsActivity.onCreate$lambda$0(SettingsActivity.this, compoundButton, z);\n            }\n        });\n        getPasswordRequiredSwitch().setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { // from class: com.netlight.sec.finstergram.ui.settings.SettingsActivity$$ExternalSyntheticLambda1\n            @Override // android.widget.CompoundButton.OnCheckedChangeListener\n            public final void onCheckedChanged(CompoundButton compoundButton, boolean z) {\n                SettingsActivity.onCreate$lambda$1(SettingsActivity.this, compoundButton, z);\n            }\n        });\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onCreate$lambda$0(SettingsActivity this$0, CompoundButton compoundButton, boolean checked) {\n        Intrinsics.checkNotNullParameter(this$0, \"this$0\");\n        UserSettings.Companion.store$default(UserSettings.INSTANCE, this$0, checked, false, 4, null);\n        this$0.setBackgroundColor(checked ? this$0.getDark() : this$0.getLight());\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onCreate$lambda$1(SettingsActivity this$0, CompoundButton compoundButton, boolean checked) {\n        Intrinsics.checkNotNullParameter(this$0, \"this$0\");\n        UserSettings.Companion.store$default(UserSettings.INSTANCE, this$0, false, checked, 2, null);\n    }\n\n    @Override // android.app.Activity\n    public boolean onOptionsItemSelected(MenuItem item) {\n        Intrinsics.checkNotNullParameter(item, \"item\");\n        if (item.getItemId() == 16908332) {\n            finish();\n            return true;\n        }\n        return super.onContextItemSelected(item);\n    }\n\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity\n    public void setBackgroundColor(int color) {\n        ((LinearLayout) findViewById(R.id.rootView)).setBackgroundColor(color);\n    }\n}"},"startColumn":1,"startLine":18}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/settings/SettingsActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":36,"endLine":20,"snippet":{"text":"public final class SettingsActivity extends FinstergramBaseActivity {"},"startColumn":20,"startLine":20}}}],"message":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/shared/SharedImageActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":2,"endLine":157,"snippet":{"text":"@Metadata(d1 = {\"\\u0000H\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0004\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0010\\u0002\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0003\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\n\\u0002\\u0010\\b\\n\\u0002\\b\\u0003\\u0018\\u0000 \\u001c2\\u00020\\u0001:\\u0002\\u001c\\u001dB\\u0005¢\\u0006\\u0002\\u0010\\u0002J\\u001a\\u0010\\f\\u001a\\u00020\\r2\\u0006\\u0010\\u000e\\u001a\\u00020\\u000f2\\b\\u0010\\u0010\\u001a\\u0004\\u0018\\u00010\\u0011H\\u0002J\\u0012\\u0010\\u0012\\u001a\\u00020\\r2\\b\\u0010\\u0013\\u001a\\u0004\\u0018\\u00010\\u0014H\\u0014J\\b\\u0010\\u0015\\u001a\\u00020\\rH\\u0014J\\u0012\\u0010\\u0016\\u001a\\u0004\\u0018\\u00010\\u00112\\u0006\\u0010\\u0017\\u001a\\u00020\\u0018H\\u0002J\\u0010\\u0010\\u0019\\u001a\\u00020\\r2\\u0006\\u0010\\u001a\\u001a\\u00020\\u001bH\\u0016R\\u001c\\u0010\\u0003\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\u00040\\u00048BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\u0006\\u0010\\u0007R\\u001c\\u0010\\b\\u001a\\n \\u0005*\\u0004\\u0018\\u00010\\t0\\t8BX\\u0082\\u0004¢\\u0006\\u0006\\u001a\\u0004\\b\\n\\u0010\\u000b¨\\u0006\\u001e\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity;\", \"Lcom/netlight/sec/finstergram/ui/FinstergramBaseActivity;\", \"()V\", \"continueButton\", \"Landroid/widget/Button;\", \"kotlin.jvm.PlatformType\", \"getContinueButton\", \"()Landroid/widget/Button;\", \"rootView\", \"Landroid/widget/LinearLayout;\", \"getRootView\", \"()Landroid/widget/LinearLayout;\", \"importImage\", \"\", \"imageUri\", \"Landroid/net/Uri;\", \"metadataOptions\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions;\", \"onCreate\", \"savedInstanceState\", \"Landroid/os/Bundle;\", \"onResume\", \"parseMetadataOptions\", \"intent\", \"Landroid/content/Intent;\", \"setBackgroundColor\", TypedValues.Custom.S_COLOR, \"\", \"Companion\", \"MetadataOptions\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n/* loaded from: classes6.dex */\npublic final class SharedImageActivity extends FinstergramBaseActivity {\n    public static final String INTENT_EXTRA_IMG_METADATA_OPTION = \"INTENT_EXTRA_IMG_METADATA_OPTION\";\n    public static final String INTENT_EXTRA_IMG_METADATA_OPTION_TYPE = \"INTENT_EXTRA_IMG_METADATA_OPTION_TYPE\";\n\n    private final LinearLayout getRootView() {\n        return (LinearLayout) findViewById(R.id.rootView);\n    }\n\n    private final Button getContinueButton() {\n        return (Button) findViewById(R.id.continueButton);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_shared_image);\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity, androidx.fragment.app.FragmentActivity, android.app.Activity\n    public void onResume() {\n        super.onResume();\n        getContinueButton().setOnClickListener(new View.OnClickListener() { // from class: com.netlight.sec.finstergram.ui.shared.SharedImageActivity$$ExternalSyntheticLambda0\n            @Override // android.view.View.OnClickListener\n            public final void onClick(View view) {\n                SharedImageActivity.onResume$lambda$0(SharedImageActivity.this, view);\n            }\n        });\n        Parcelable parcelableExtra = getIntent().getParcelableExtra(\"android.intent.extra.STREAM\");\n        Uri imageUri = parcelableExtra instanceof Uri ? (Uri) parcelableExtra : null;\n        Intent intent = getIntent();\n        Intrinsics.checkNotNullExpressionValue(intent, \"intent\");\n        MetadataOptions imageMetadataOptions = parseMetadataOptions(intent);\n        if (imageUri != null) {\n            importImage(imageUri, imageMetadataOptions);\n            Snackbar.make(getRootView(), \"Image imported!\", -1).show();\n            setResult(-1, getIntent());\n        } else {\n            setResult(0, getIntent());\n            finish();\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public static final void onResume$lambda$0(SharedImageActivity this$0, View it) {\n        Intrinsics.checkNotNullParameter(this$0, \"this$0\");\n        Intent intent = new Intent(this$0, (Class<?>) LoginActivity.class);\n        this$0.startActivity(intent);\n        this$0.finish();\n    }\n\n    private final MetadataOptions parseMetadataOptions(Intent intent) {\n        String optionType = intent.getStringExtra(INTENT_EXTRA_IMG_METADATA_OPTION_TYPE);\n        String option = intent.getStringExtra(INTENT_EXTRA_IMG_METADATA_OPTION);\n        if (optionType == null || option == null) {\n            return null;\n        }\n        Class<?> cls = Class.forName(optionType);\n        Intrinsics.checkNotNullExpressionValue(cls, \"forName(optionType)\");\n        KClass optionClass = JvmClassMappingKt.getKotlinClass(cls);\n        KSerializer serializer = SerializersKt.serializer(optionClass);\n        Object decodeFromString = Json.INSTANCE.decodeFromString(serializer, option);\n        if (decodeFromString instanceof MetadataOptions) {\n            return (MetadataOptions) decodeFromString;\n        }\n        return null;\n    }\n\n    private final void importImage(Uri imageUri, MetadataOptions metadataOptions) {\n        ImageStore.INSTANCE.storeImage(this, imageUri);\n    }\n\n    /* compiled from: SharedImageActivity.kt */\n    @Metadata(d1 = {\"\\u0000\\u001a\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0010\\u0000\\n\\u0002\\b\\u0004\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0000\\b6\\u0018\\u00002\\u00020\\u0001:\\u0003\\u0003\\u0004\\u0005B\\u0007\\b\\u0004¢\\u0006\\u0002\\u0010\\u0002\\u0082\\u0001\\u0003\\u0006\\u0007\\b¨\\u0006\\t\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions;\", \"\", \"()V\", \"AddMetadata\", \"KeepMetadata\", \"StripMetadata\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions$AddMetadata;\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions$KeepMetadata;\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions$StripMetadata;\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n    /* loaded from: classes6.dex */\n    public static abstract class MetadataOptions {\n        public /* synthetic */ MetadataOptions(DefaultConstructorMarker defaultConstructorMarker) {\n            this();\n        }\n\n        private MetadataOptions() {\n        }\n\n        /* compiled from: SharedImageActivity.kt */\n        @Metadata(d1 = {\"\\u0000\\u0012\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0000\\n\\u0002\\u0010\\u000e\\n\\u0002\\b\\u0004\\u0018\\u00002\\u00020\\u0001B\\r\\u0012\\u0006\\u0010\\u0002\\u001a\\u00020\\u0003¢\\u0006\\u0002\\u0010\\u0004R\\u0011\\u0010\\u0002\\u001a\\u00020\\u0003¢\\u0006\\b\\n\\u0000\\u001a\\u0004\\b\\u0005\\u0010\\u0006¨\\u0006\\u0007\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions$AddMetadata;\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions;\", \"data\", \"\", \"(Ljava/lang/String;)V\", \"getData\", \"()Ljava/lang/String;\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n        /* loaded from: classes6.dex */\n        public static final class AddMetadata extends MetadataOptions {\n            private final String data;\n\n            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */\n            public AddMetadata(String data) {\n                super(null);\n                Intrinsics.checkNotNullParameter(data, \"data\");\n                this.data = data;\n            }\n\n            public final String getData() {\n                return this.data;\n            }\n        }\n\n        /* compiled from: SharedImageActivity.kt */\n        @Metadata(d1 = {\"\\u0000\\f\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\bÆ\\u0002\\u0018\\u00002\\u00020\\u0001B\\u0007\\b\\u0002¢\\u0006\\u0002\\u0010\\u0002¨\\u0006\\u0003\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions$KeepMetadata;\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions;\", \"()V\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n        /* loaded from: classes6.dex */\n        public static final class KeepMetadata extends MetadataOptions {\n            public static final KeepMetadata INSTANCE = new KeepMetadata();\n\n            private KeepMetadata() {\n                super(null);\n            }\n        }\n\n        /* compiled from: SharedImageActivity.kt */\n        @Metadata(d1 = {\"\\u0000\\f\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0018\\u0002\\n\\u0002\\b\\u0002\\bÆ\\u0002\\u0018\\u00002\\u00020\\u0001B\\u0007\\b\\u0002¢\\u0006\\u0002\\u0010\\u0002¨\\u0006\\u0003\"}, d2 = {\"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions$StripMetadata;\", \"Lcom/netlight/sec/finstergram/ui/shared/SharedImageActivity$MetadataOptions;\", \"()V\", \"app_debug\"}, k = 1, mv = {1, 7, 1}, xi = 48)\n        /* loaded from: classes6.dex */\n        public static final class StripMetadata extends MetadataOptions {\n            public static final StripMetadata INSTANCE = new StripMetadata();\n\n            private StripMetadata() {\n                super(null);\n            }\n        }\n    }\n\n    @Override // com.netlight.sec.finstergram.ui.FinstergramBaseActivity\n    public void setBackgroundColor(int color) {\n        getRootView().setBackgroundColor(color);\n    }\n}"},"startColumn":1,"startLine":26}}}],"message":{"text":"The application does not remove sensitive data from views when moved to the background."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"},{"fingerprints":{"matchBasedId/v1":"requires login"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"ui/shared/SharedImageActivity.java","uriBaseId":"%SRCROOT%"},"region":{"endColumn":39,"endLine":28,"snippet":{"text":"public final class SharedImageActivity extends FinstergramBaseActivity {"},"startColumn":20,"startLine":28}}}],"message":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"properties":{},"ruleId":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"}],"tool":{"driver":{"name":"Semgrep OSS","rules":[{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application does not seem to properly implement biometric authentication."},"help":{"markdown":"The application does not seem to properly implement biometric authentication.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05f-Testing-Local-Authentication.md#testing-biometric-authentication-mstg-auth-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05f-Testing-Local-Authentication.md#testing-biometric-authentication-mstg-auth-8)\n","text":"The application does not seem to properly implement biometric authentication."},"id":"semgrep-rules-android-security.rules.auth.MSTG-AUTH-8","name":"semgrep-rules-android-security.rules.auth.MSTG-AUTH-8","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.auth.MSTG-AUTH-8"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application is built with the \"android:debuggable\" flag set to true."},"help":{"markdown":"The application is built with the \"android:debuggable\" flag set to true.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#testing-whether-the-app-is-debuggable-mstg-code-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#testing-whether-the-app-is-debuggable-mstg-code-2)\n","text":"The application is built with the \"android:debuggable\" flag set to true."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-2","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application uses the Android NDK build system without stripping out debug symbols."},"help":{"markdown":"The application uses the Android NDK build system without stripping out debug symbols.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#testing-for-debugging-symbols-mstg-code-3](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#testing-for-debugging-symbols-mstg-code-3)\n","text":"The application uses the Android NDK build system without stripping out debug symbols."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-3","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application uses the StrictMode in production build."},"help":{"markdown":"The application uses the StrictMode in production build.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#testing-for-debugging-code-and-verbose-error-logging-mstg-code-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#testing-for-debugging-code-and-verbose-error-logging-mstg-code-4)\n","text":"The application uses the StrictMode in production build."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-4","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-4","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-4"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application does not unregister the broadcast receiver \"$RCV\" in the \"onStop()\" method of the activity."},"help":{"markdown":"The application does not unregister the broadcast receiver \"$RCV\" in the \"onStop()\" method of the activity.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8)\n","text":"The application does not unregister the broadcast receiver \"$RCV\" in the \"onStop()\" method of the activity."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.1","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-8.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application defines the attribute \"$V\" statically preventing the garbage collector from cleaning the memory."},"help":{"markdown":"The application defines the attribute \"$V\" statically preventing the garbage collector from cleaning the memory.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8)\n","text":"The application defines the attribute \"$V\" statically preventing the garbage collector from cleaning the memory."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.2","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-8.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application uses dangerously inner classes that are prone to memory leak."},"help":{"markdown":"The application uses dangerously inner classes that are prone to memory leak.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8)\n","text":"The application uses dangerously inner classes that are prone to memory leak."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.3","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-8.3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application uses non-static anonymous class \"$IC\" causing possible memory leaks."},"help":{"markdown":"The application uses non-static anonymous class \"$IC\" causing possible memory leaks.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05i-Testing-Code-Quality-and-Build-Settings.md#memory-corruption-bugs-mstg-code-8)\n","text":"The application uses non-static anonymous class \"$IC\" causing possible memory leaks."},"id":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.5","name":"semgrep-rules-android-security.rules.code.MSTG-CODE-8.5","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.code.MSTG-CODE-8.5"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application relies on symmetric cryptography with hardcoded keys as a sole method of encryption."},"help":{"markdown":"The application relies on symmetric cryptography with hardcoded keys as a sole method of encryption.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05e-Testing-Cryptography.md#testing-symmetric-cryptography-mstg-crypto-1](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05e-Testing-Cryptography.md#testing-symmetric-cryptography-mstg-crypto-1)\n","text":"The application relies on symmetric cryptography with hardcoded keys as a sole method of encryption."},"id":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-1","name":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application uses custom implementations of cryptographic primitives."},"help":{"markdown":"The application uses custom implementations of cryptographic primitives.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05e-Testing-Cryptography.md#testing-the-configuration-of-cryptographic-standard-algorithms-mstg-crypto-2-mstg-crypto-3-and-mstg-crypto-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05e-Testing-Cryptography.md#testing-the-configuration-of-cryptographic-standard-algorithms-mstg-crypto-2-mstg-crypto-3-and-mstg-crypto-4)\n","text":"The application uses custom implementations of cryptographic primitives."},"id":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-2","name":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application uses deprecated cryptographic algorithms."},"help":{"markdown":"The application uses deprecated cryptographic algorithms.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x04g-Testing-Cryptography.md#identifying-insecure-andor-deprecated-cryptographic-algorithms-mstg-crypto-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x04g-Testing-Cryptography.md#identifying-insecure-andor-deprecated-cryptographic-algorithms-mstg-crypto-4)\n","text":"The application uses deprecated cryptographic algorithms."},"id":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-4","name":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-4","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-4"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application makes use of insecure random number generator."},"help":{"markdown":"The application makes use of insecure random number generator.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05e-Testing-Cryptography.md#testing-random-number-generation-mstg-crypto-6](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05e-Testing-Cryptography.md#testing-random-number-generation-mstg-crypto-6)\n","text":"The application makes use of insecure random number generator."},"id":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-6","name":"semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-6","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.crypto.MSTG-CRYPTO-6"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application transmits information over insecure channels through the use of HttpURLConnection. It is recommended to verify if the Network Security Configuration is appropriately configured to prevent such insecure transmissions."},"help":{"markdown":"The application transmits information over insecure channels through the use of HttpURLConnection. It is recommended to verify if the Network Security Configuration is appropriately configured to prevent such insecure transmissions.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-data-encryption-on-the-network-mstg-network-1](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-data-encryption-on-the-network-mstg-network-1)\n","text":"The application transmits information over insecure channels through the use of HttpURLConnection. It is recommended to verify if the Network Security Configuration is appropriately configured to prevent such insecure transmissions."},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-1.1","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-1.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-1.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application could send information over insecure channels or not use the getDefaultHostnameVerifier method for SSLSocket"},"help":{"markdown":"The application could send information over insecure channels or not use the getDefaultHostnameVerifier method for SSLSocket\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-data-encryption-on-the-network-mstg-network-1](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-data-encryption-on-the-network-mstg-network-1)\n","text":"The application could send information over insecure channels or not use the getDefaultHostnameVerifier method for SSLSocket"},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-1.2","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-1.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-1.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Weak transport protocol version $PROTO is used."},"help":{"markdown":"Weak transport protocol version $PROTO is used.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/tree/v1.5.0/Document/0x04f-Testing-Network-Communication.md](https://github.com/OWASP/owasp-mastg/tree/v1.5.0/Document/0x04f-Testing-Network-Communication.md)\n","text":"Weak transport protocol version $PROTO is used."},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-2.1","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-2.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-2.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Unrecommended cipher suite $BADCIPHER is used."},"help":{"markdown":"Unrecommended cipher suite $BADCIPHER is used.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/tree/v1.5.0/Document/0x04f-Testing-Network-Communication.md](https://github.com/OWASP/owasp-mastg/tree/v1.5.0/Document/0x04f-Testing-Network-Communication.md)\n","text":"Unrecommended cipher suite $BADCIPHER is used."},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-2.2","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-2.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-2.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Improper Server Certificate verification detected."},"help":{"markdown":"Improper Server Certificate verification detected.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-endpoint-identify-verification-mstg-network-3](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-endpoint-identify-verification-mstg-network-3)\n","text":"Improper Server Certificate verification detected."},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-3","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application may not implement correctly SSL Pinning."},"help":{"markdown":"The application may not implement correctly SSL Pinning.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4)\n","text":"The application may not implement correctly SSL Pinning."},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-4.1","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-4.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-4.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application may not implement correctly the SSL Pinning."},"help":{"markdown":"The application may not implement correctly the SSL Pinning.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4)\n","text":"The application may not implement correctly the SSL Pinning."},"id":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-4.2","name":"semgrep-rules-android-security.rules.network.MSTG-NETWORK-4.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.network.MSTG-NETWORK-4.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application should request the minimum set of necessary permissions."},"help":{"markdown":"The application should request the minimum set of necessary permissions.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-app-permissions-mstg-platform-1](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-app-permissions-mstg-platform-1)\n","text":"The application should request the minimum set of necessary permissions."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-1","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The regular expression $RE is potentially vulnerable to catastrophic backtracking."},"help":{"markdown":"The regular expression $RE is potentially vulnerable to catastrophic backtracking.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2)\n","text":"The regular expression $RE is potentially vulnerable to catastrophic backtracking."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.1","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Identified the potential presence of SQL Injection in the ContentProvider class \"$CLASS\"."},"help":{"markdown":"Identified the potential presence of SQL Injection in the ContentProvider class \"$CLASS\".\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2)\n","text":"Identified the potential presence of SQL Injection in the ContentProvider class \"$CLASS\"."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.2","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Identified a potential SQL Injection vulnerability during intent handling."},"help":{"markdown":"Identified a potential SQL Injection vulnerability during intent handling.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2)\n","text":"Identified a potential SQL Injection vulnerability during intent handling."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.3","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Use of \"$PATH\" detected in a FileProvider paths configuration file."},"help":{"markdown":"Use of \"$PATH\" detected in a FileProvider paths configuration file.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-injection-flaws-mstg-platform-2)\n","text":"Use of \"$PATH\" detected in a FileProvider paths configuration file."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.4","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.4","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.4"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Potential Fragment Injection found, check that the \"android:targetSdkVersion\" is not less than 19."},"help":{"markdown":"Potential Fragment Injection found, check that the \"android:targetSdkVersion\" is not less than 19.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-fragment-injection-mstg-platform-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-fragment-injection-mstg-platform-2)\n","text":"Potential Fragment Injection found, check that the \"android:targetSdkVersion\" is not less than 19."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.5","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.5","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.5"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Potential Fragment Injection found in the dinamically instantiated Fragment."},"help":{"markdown":"Potential Fragment Injection found in the dinamically instantiated Fragment.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-fragment-injection-mstg-platform-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-fragment-injection-mstg-platform-2)\n","text":"Potential Fragment Injection found in the dinamically instantiated Fragment."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.6","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.6","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-2.6"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application provides functionality via custom URL schemes. It is recommended to manual check possible sensitive data or functionality exposures."},"help":{"markdown":"The application provides functionality via custom URL schemes. It is recommended to manual check possible sensitive data or functionality exposures.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-deep-links-mstg-platform-3](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-deep-links-mstg-platform-3)\n","text":"The application provides functionality via custom URL schemes. It is recommended to manual check possible sensitive data or functionality exposures."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-3","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Pending Intents must be declared as immutable and specify the exact package, action, and component that will receive the base intent."},"help":{"markdown":"Pending Intents must be declared as immutable and specify the exact package, action, and component that will receive the base intent.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-sensitive-functionality-exposure-through-ipc-mstg-platform-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-sensitive-functionality-exposure-through-ipc-mstg-platform-4)\n","text":"Pending Intents must be declared as immutable and specify the exact package, action, and component that will receive the base intent."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.1","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Pending Intents not intended to be fired multiple times should use the \"FLAG_ONE_SHOT\" flag to avoid replay attacks."},"help":{"markdown":"Pending Intents not intended to be fired multiple times should use the \"FLAG_ONE_SHOT\" flag to avoid replay attacks.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-sensitive-functionality-exposure-through-ipc-mstg-platform-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-sensitive-functionality-exposure-through-ipc-mstg-platform-4)\n - [https://developer.android.com/topic/security/risks/pending-intent#risk_replaying_pending_intents](https://developer.android.com/topic/security/risks/pending-intent#risk_replaying_pending_intents)\n","text":"Pending Intents not intended to be fired multiple times should use the \"FLAG_ONE_SHOT\" flag to avoid replay attacks."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.2","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application exposes sensitive functionality through IPC without defining specific permissions."},"help":{"markdown":"The application exposes sensitive functionality through IPC without defining specific permissions.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-sensitive-functionality-exposure-through-ipc-mstg-platform-4](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-sensitive-functionality-exposure-through-ipc-mstg-platform-4)\n - [https://developer.android.com/topic/security/risks/pending-intent#risk_replaying_pending_intents](https://developer.android.com/topic/security/risks/pending-intent#risk_replaying_pending_intents)\n","text":"The application exposes sensitive functionality through IPC without defining specific permissions."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.3","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-4.3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application allows JavaScript execution within a WebView instance."},"help":{"markdown":"The application allows JavaScript execution within a WebView instance.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-javascript-execution-in-webviews-mstg-platform-5](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-javascript-execution-in-webviews-mstg-platform-5)\n","text":"The application allows JavaScript execution within a WebView instance."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-5","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-5","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-5"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"WebView can load remote content from an endpoint or local file system in an unsafe manner."},"help":{"markdown":"WebView can load remote content from an endpoint or local file system in an unsafe manner.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-webview-protocol-handlers-mstg-platform-6](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-webview-protocol-handlers-mstg-platform-6)\n","text":"WebView can load remote content from an endpoint or local file system in an unsafe manner."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-6.1","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-6.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-6.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The WebView allows to load external content. It is suggested to verify that the granted accesses are necessary and follow best practices."},"help":{"markdown":"The WebView allows to load external content. It is suggested to verify that the granted accesses are necessary and follow best practices.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-webview-protocol-handlers-mstg-platform-6](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-webview-protocol-handlers-mstg-platform-6)\n","text":"The WebView allows to load external content. It is suggested to verify that the granted accesses are necessary and follow best practices."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-6.2","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-6.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-6.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The method \"$X\" is accessible from a WebView through the annotation JavascriptInterface (Java)."},"help":{"markdown":"The method \"$X\" is accessible from a WebView through the annotation JavascriptInterface (Java).\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#determining-whether-java-objects-are-exposed-through-webviews-mstg-platform-7](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#determining-whether-java-objects-are-exposed-through-webviews-mstg-platform-7)\n","text":"The method \"$X\" is accessible from a WebView through the annotation JavascriptInterface (Java)."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-7.1-java","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-7.1-java","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-7.1-java"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application exposes the Java class \"$CLASS\" to the WebView \"$WV\" via addJavascriptInterface()."},"help":{"markdown":"The application exposes the Java class \"$CLASS\" to the WebView \"$WV\" via addJavascriptInterface().\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#determining-whether-java-objects-are-exposed-through-webviews-mstg-platform-7](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#determining-whether-java-objects-are-exposed-through-webviews-mstg-platform-7)\n","text":"The application exposes the Java class \"$CLASS\" to the WebView \"$WV\" via addJavascriptInterface()."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-7.2","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-7.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-7.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application saves objects using potentially unsafe persistence primitives that apparently do not employ encryption."},"help":{"markdown":"The application saves objects using potentially unsafe persistence primitives that apparently do not employ encryption.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-object-persistence-mstg-platform-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-object-persistence-mstg-platform-8)\n","text":"The application saves objects using potentially unsafe persistence primitives that apparently do not employ encryption."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-8.1","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-8.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-8.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application logs debug information on all the Sugar ORM queries, potentially disclosing critical information."},"help":{"markdown":"The application logs debug information on all the Sugar ORM queries, potentially disclosing critical information.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-object-persistence-mstg-platform-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-object-persistence-mstg-platform-8)\n","text":"The application logs debug information on all the Sugar ORM queries, potentially disclosing critical information."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-8.2","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-8.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-8.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"help":{"markdown":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9)\n","text":"Tapjacking - The application does not enforce any security policy to prevent overlay attacks."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application does not enforce any security policy in order to prevent overlay attacks."},"help":{"markdown":"The application does not enforce any security policy in order to prevent overlay attacks.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9)\n","text":"The application does not enforce any security policy in order to prevent overlay attacks."},"id":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.2","name":"semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.MSTG-PLATFORM-9.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"Detected @JavascriptInterface in Kotlin code."},"help":{"markdown":"Detected @JavascriptInterface in Kotlin code.","text":"Detected @JavascriptInterface in Kotlin code."},"id":"semgrep-rules-android-security.rules.platform.javascriptinterface-detected-kotlin","name":"semgrep-rules-android-security.rules.platform.javascriptinterface-detected-kotlin","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.platform.javascriptinterface-detected-kotlin"}},{"defaultConfiguration":{"level":"note"},"fullDescription":{"text":"This app has root detection capabilities. Verify the effectiveness. Running a sensitive application on a rooted device questions the device integrity and affects users data."},"help":{"markdown":"This app has root detection capabilities. Verify the effectiveness. Running a sensitive application on a rooted device questions the device integrity and affects users data.","text":"This app has root detection capabilities. Verify the effectiveness. Running a sensitive application on a rooted device questions the device integrity and affects users data."},"id":"semgrep-rules-android-security.rules.resilience.android_root_detection","name":"semgrep-rules-android-security.rules.resilience.android_root_detection","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.resilience.android_root_detection"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application stores credentials outside the Android Keystore."},"help":{"markdown":"The application stores credentials outside the Android Keystore.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-local-storage-for-sensitive-data-mstg-storage-1-and-mstg-storage-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-local-storage-for-sensitive-data-mstg-storage-1-and-mstg-storage-2)\n","text":"The application stores credentials outside the Android Keystore."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-1","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application allows to use Android versions earlier than 23."},"help":{"markdown":"The application allows to use Android versions earlier than 23.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-the-device-access-security-policy-mstg-storage-11](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-the-device-access-security-policy-mstg-storage-11)\n","text":"The application allows to use Android versions earlier than 23."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-11","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-11","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-11"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application could store sensitive data outside of the application container or system credential storage facilities."},"help":{"markdown":"The application could store sensitive data outside of the application container or system credential storage facilities.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-local-storage-for-sensitive-data-mstg-storage-1-and-mstg-storage-2](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-local-storage-for-sensitive-data-mstg-storage-1-and-mstg-storage-2)\n","text":"The application could store sensitive data outside of the application container or system credential storage facilities."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-2","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application writes sensitive data in application logs."},"help":{"markdown":"The application writes sensitive data in application logs.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-logs-for-sensitive-data-mstg-storage-3](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-logs-for-sensitive-data-mstg-storage-3)\n","text":"The application writes sensitive data in application logs."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-3","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-3","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-3"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The keyboard cache is not disabled on text inputs that process sensitive data."},"help":{"markdown":"The keyboard cache is not disabled on text inputs that process sensitive data.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-the-keyboard-cache-is-disabled-for-text-input-fields-mstg-storage-5](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-the-keyboard-cache-is-disabled-for-text-input-fields-mstg-storage-5)\n","text":"The keyboard cache is not disabled on text inputs that process sensitive data."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-5.1","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-5.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-5.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The keyboard cache is not disabled on text inputs that process sensitive data."},"help":{"markdown":"The keyboard cache is not disabled on text inputs that process sensitive data.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-the-keyboard-cache-is-disabled-for-text-input-fields-mstg-storage-5](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-the-keyboard-cache-is-disabled-for-text-input-fields-mstg-storage-5)\n","text":"The keyboard cache is not disabled on text inputs that process sensitive data."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-5.2","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-5.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-5.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application may expose sensitive data via IPC mechanisms."},"help":{"markdown":"The application may expose sensitive data via IPC mechanisms.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-sensitive-stored-data-has-been-exposed-via-ipc-mechanisms-mstg-storage-6](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-sensitive-stored-data-has-been-exposed-via-ipc-mechanisms-mstg-storage-6)\n","text":"The application may expose sensitive data via IPC mechanisms."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-6.1","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-6.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-6.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application may expose sensitive data via Clipboard Manager."},"help":{"markdown":"The application may expose sensitive data via Clipboard Manager.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-sensitive-stored-data-has-been-exposed-via-ipc-mechanisms-mstg-storage-6](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#determining-whether-sensitive-stored-data-has-been-exposed-via-ipc-mechanisms-mstg-storage-6)\n","text":"The application may expose sensitive data via Clipboard Manager."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-6.2","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-6.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-6.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application exposes sensitive data via the user interface."},"help":{"markdown":"The application exposes sensitive data via the user interface.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#checking-for-sensitive-data-disclosure-through-the-user-interface-mstg-storage-7](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#checking-for-sensitive-data-disclosure-through-the-user-interface-mstg-storage-7)\n","text":"The application exposes sensitive data via the user interface."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-7.1","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-7.1","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-7.1"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application exposes sensitive data via the user interface."},"help":{"markdown":"The application exposes sensitive data via the user interface.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#checking-for-sensitive-data-disclosure-through-the-user-interface-mstg-storage-7](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#checking-for-sensitive-data-disclosure-through-the-user-interface-mstg-storage-7)\n","text":"The application exposes sensitive data via the user interface."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-7.2","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-7.2","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-7.2"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application allows automatic backup."},"help":{"markdown":"The application allows automatic backup.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-backups-for-sensitive-data-mstg-storage-8](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#testing-backups-for-sensitive-data-mstg-storage-8)\n","text":"The application allows automatic backup."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-8","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-8","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-8"}},{"defaultConfiguration":{"level":"warning"},"fullDescription":{"text":"The application does not remove sensitive data from views when moved to the background."},"help":{"markdown":"The application does not remove sensitive data from views when moved to the background.\n\n<b>References:</b>\n - [https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9](https://github.com/OWASP/owasp-mastg/blob/v1.5.0/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9)\n","text":"The application does not remove sensitive data from views when moved to the background."},"id":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9","name":"semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9","properties":{"precision":"very-high","tags":[]},"shortDescription":{"text":"Semgrep Finding: semgrep-rules-android-security.rules.storage.MSTG-STORAGE-9"}}],"semanticVersion":"1.119.0"}}}],"$schema":"https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/schemas/sarif-schema-2.1.0.json"}